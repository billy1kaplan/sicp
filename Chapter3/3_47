#lang racket

(define (generate f n)
  (if (= 0 n)
      null
      (cons (f) (generate f (- n 1)))))

(define (make-serialized)
  null)

(define (make-mutex)
  null)

(define (make-semaphore n)
  (define threads n)
  (define mutex (make-mutex))
  (define (spin-off p)
    (mutex 'acquire)
    (if (< 0 threads)
        (spin-off p)
        (begin (set! threads (- threads 1))
               (p)
               (set! threads (+ threads 1))))
  (define (start ps)
    (if (null? ps)
        'done
        (begin (spin-off (car ps))
               (start (cdr ps)))))
  start)

