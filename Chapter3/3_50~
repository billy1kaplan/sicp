#lang racket

(define (delay a)
  (lambda () a))

(define (force a)
  (a))

(define (car-stream s)
  (car s))

(define (cdr-stream s)
  (force (cdr s)))

(define (cons-stream a b)
  (cons a (delay b)))

(define the-empty-stream
  null)

(define (stream-null? s)
  (null? s))

(define (stream-car stream) (car stream))

(define (stream-cdr stream) (force (cdr stream)))

(define (stream-map proc . argstreams)
  (if (stream-null? (car argstreams))
      the-empty-stream
      (cons-stream
       (apply proc (map car-stream argstreams))
       (apply stream-map
              (cons proc (map cdr-stream argstreams))))))