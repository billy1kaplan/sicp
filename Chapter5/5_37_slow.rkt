(save continue)
(save env)
(save continue)
(save env)
(save continue)
(assign proc (op lookup-variable-value) (const x) (reg env))
(restore continue)
(restore env)
(restore continue)
(save continue)
(save proc)
(save continue)
(assign val (op lookup-variable-value) (const y) (reg env))
(restore continue)
(assign arg1 (op list) (reg val))
(restore proc)
(restore continue)
(test (op primitive-procedure?) (reg proc))
(branch (label primitive-branch4))
compiled-branch5
(assign continue (label after-call6))
(assign val (op compiled-procedure-entry) (reg proc))
(goto (reg val))
primitive-branch4
(save continue)
(assign val (op apply-primitive-procedure) (reg proc) (reg arg1))
(restore continue)
after-call6
(restore env)
(restore continue)
(test (op false?) (reg val))
(branch (label false-branch2))
true-branch1
(save continue)
(save env)
(save continue)
(assign proc (op lookup-variable-value) (const x) (reg env))
(restore continue)
(restore env)
(restore continue)
(save continue)
(save proc)
(save continue)
(assign val (const 2))
(restore continue)
(assign arg1 (op list) (reg val))
(restore proc)
(restore continue)
(test (op primitive-procedure?) (reg proc))
(branch (label primitive-branch7))
compiled-branch8
(assign continue (label after-if3))
(assign val (op compiled-procedure-entry) (reg proc))
(goto (reg val))
primitive-branch7
(save continue)
(assign val (op apply-primitive-procedure) (reg proc) (reg arg1))
(restore continue)
(goto (label after-if3))
after-call9
false-branch2
(save continue)
(assign val (op lookup-variable-value) (const y) (reg env))
(restore continue)
after-if3
